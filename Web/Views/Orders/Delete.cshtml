@using Domain.Domain_Models
@using Eshop.Domain.Domain
@* Views/Orders/Delete.cshtml *@
@model Order

<h2>Delete Order</h2>

<div class="alert alert-danger">
    <h4>Are you sure you want to delete this order?</h4>
</div>

<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">Order #@Model.Id.ToString().Substring(0, 8)</h5>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">Order Date</dt>
            <dd class="col-sm-9">@Model.OrderDate.ToString("MM/dd/yyyy HH:mm")</dd>

            <dt class="col-sm-3">Status</dt>
            <dd class="col-sm-9">
                <span class="badge bg-@GetStatusBadgeColor(Model.Status)">@Model.Status</span>
            </dd>

            <dt class="col-sm-3">Total</dt>
            <dd class="col-sm-9">@Model.TotalPrice.ToString("C")</dd>

            <dt class="col-sm-3">Items</dt>
            <dd class="col-sm-9">
                <ul class="list-unstyled">
                    @foreach (var item in Model.BookInOrders)
                    {
                        <li>@item.Book?.Title (@item.Quantity)</li>
                    }
                </ul>
            </dd>
        </dl>
    </div>
</div>

<form asp-action="Delete">
    <input type="hidden" asp-for="Id" />
    <button type="submit" class="btn btn-danger">Delete Order</button>
    <a asp-action="Index" class="btn btn-secondary">Back to Orders</a>
</form>

@functions {
    private string GetStatusBadgeColor(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.Processing => "info",
            OrderStatus.Shipped => "primary",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }
}