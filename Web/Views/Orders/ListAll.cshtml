@using Domain.Domain_Models
@using Eshop.Domain.Domain

@using Domain.Identity_Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<IntegratedSystemsUser> UserManager

@* Views/Orders/Index.cshtml *@
@model IEnumerable<Order>

<h2>All Orders</h2>

@if (!Model.Any())
{
    <div class="alert alert-info">
        You haven't placed any orders yet.
        <a asp-controller="Books" asp-action="Index">Browse books</a>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Order #</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th>Items</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id.ToString().Substring(0, 8)</td>
                        <td>@order.OrderDate.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>
                            <span class="badge bg-@GetStatusBadgeColor(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <td>@order.TotalPrice.ToString("C")</td>
                        <td>@order.BookInOrders.Sum(b => b.Quantity) items</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@order.Id"
                               class="btn btn-outline-primary btn-sm">
                                View Details
                            </a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin")){
                    <a asp-action="Delete" asp-route-id="@order.Id"
                       class="btn btn-outline-danger btn-sm">
                        Delete
                    </a>
                    }
                </td>
            </tr>
                }
            </tbody>
        </table>
    </div>
}

@functions {
    private string GetStatusBadgeColor(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.Processing => "info",
            OrderStatus.Shipped => "primary",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }
}